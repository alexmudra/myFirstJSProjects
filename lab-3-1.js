//lab-3-1//ЗАДАЧА 1: НАПИШИТЕ ФУНКЦИЮ POWER(), КОТОРАЯ //ПРИНИМАЕТ 2 ЦЕЛОЧИСЛЕННЫХ ЗНАЧЕНИЯ. ФУНКЦИЯ ДОЛЖНА ВОЗВРАЩАТЬ РЕЗУЛЬТАТ. ВОЗВЕДЕНИЯ ПЕРВОГО ЧИСЛА В СТЕПЕНЬ ВТОРОГО/*function power(base, exponent){ // у нас функция принимает 2 значения: base = базовое значение и exponent = значение во что мы возводим	var result = 1; // мы знаем что возведение в 0 дает всегда 1. Поетому мы присваиваем переменной result значение 1. ЭТО НАЧАЛО КОДА		for (var cnt = 0; cnt < exponent; cnt++) // присваиваем счетчику cnt значение 0; пока cnt меньше exp..; cnt ++ 			result *= base;// другими словами result = result * base(базовое значение)	return result; // мы сразу обозначаем возврат функции через return ЭТО КОНЕЦ КОДА}*///ИСПОЛЬЗУЕМ ОБЕРТКУ PRINT ДЛЯ ТОГО ЧТОБЫ ВЫВЕСТИ РЕЗУЛЬТАТ В КОНСОЛЬ(CONCOLE.LOG) CHROME/*print(power (2,10) ); // в фукнцию POWER мы вставляем значение для BASE(базовое значение числа которое будем возводить в степень)// и оно равно 2 print(power (3,8) );print(power (2,4) );print(power (4,3) );*/// РАЗОБРАТЬСЯ С ПОНЯТИЕМ ГЛОБАЛЬНЫХ И ЛОКАЛЬНЫХ ПЕРЕМЕННЫХ В JavaScript/*var x = "X"; // переменная x тут относиться к глобальной(ВНЕ функции)var y = "Y"; // переменная y тут относиться к глобальной(ВНЕ функции)function outer (){	var x = "x";	print("x: " + x); // результатом будет x, потому как интерпретатор нашел обявленную локальную переменную х внутри функции	print("y: " + y); // результатом будет большой Y, потому что внутри функции игрик не объявлялась и поетому переменная берется с глобальных переменных}outer();print ("x: " + x); // X потому что интерпретатор взял глобальную переменную х (вне функции)print ("y: " + y); // Y потому что интерпретатор взял глобальную переменную у (вне функции)*/// ФУНКЦИЯ ВНУТРИ ФУНКЦИИ.ТО ЕСТЬ В ФУКНЦИИ OUTER ЕСТЬ ЛОКАЛЬНАЯ ФУНКЦИЯ INNER. РАЗБОР ПОНЯТИЯ/*var x = "X"; // переменная x тут относиться к глобальной(ВНЕ функции)var y = "Y"; // переменная y тут относиться к глобальной(ВНЕ функции)function outer (){	var x = "x";	print("x: " + x);	print("y: " + y);function inner (z) {	var y = "_y";	print("x: " + x); // х потому что в этой локальной функции х не объявлен и переменная берется из функции outer(выше, она там обявлена)	print("y: " + y); // _y потому что в этой локальной функции inner переменная у объявлена и имеет значение _у	print("z: " + z); // z потому что z это аргумент функции inner и он берется по дефолту	} 	inner("z");}outer();print ("x: " + x);print ("y: " + y);